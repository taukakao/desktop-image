name: Create Release Image

on:
  workflow_dispatch:
    inputs:
      base-tag:
        type: string
        required: false
        description: Tag of image to layer changes on. Leave empty for clean image.

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow actions to create release
      packages: write # Allow pushing images to GHCR
      attestations: write # To create and write attestations
      id-token: write # Additional permissions for the persistence of the attestations

    steps:
    - uses: actions/checkout@v4

    - name: Generate image name
      run: |
        REPO_OWNER_LOWERCASE="$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')"
        echo "REPO_OWNER_LOWERCASE=$REPO_OWNER_LOWERCASE" >> "$GITHUB_ENV"
        echo "IMAGE_URL=ghcr.io/$REPO_OWNER_LOWERCASE/desktop" >> "$GITHUB_ENV"

    - name: Test docker
      run: |
        docker image ls
        echo ${{ inputs.base-tag }}

    # - name: Login to GitHub Package Registry
    #   uses: docker/login-action@v3
    #   if: ${{ github.event_name != 'pull_request' }}
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.repository_owner }}
    #     password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Build and Push the Docker image
    #   id: push
    #   uses: docker/build-push-action@v6
    #   with:
    #     context: .
    #     file: Containerfile
    #     push: ${{ github.event_name != 'pull_request' }}
    #     tags: ${{ steps.docker_meta.outputs.tags }}
    #     labels: ${{ steps.docker_meta.outputs.labels }}
    #     platforms: linux/amd64
    #     provenance: false

  # differ:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/vanilla-os/desktop:main
  #   if: github.repository == 'vanilla-os/desktop-image' && github.ref_type == 'tag'
  #   needs: build

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Generate package diff
  #       run: |
  #         lpkg --unlock
  #         PACKAGE_LIST=$(.github/gen_package_list.sh)
  #         apt-get install -y curl
  #         IMAGE_DIGEST=$(curl -s -L -H "Accept: application/vnd.github+json" \
  #         -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         https://api.github.com/orgs/Vanilla-OS/packages/container/desktop/versions | grep -m1 name | sed -E 's/^\s*"name": "(.+)".*$/\1/')
  #         curl -X POST \
  #         -H 'Accept:application/json' \
  #         -H "Authorization:Basic $(echo -n "${{ secrets.DIFFER_USER }}:${{ secrets.DIFFER_PSW }}" | base64)" \
  #         -d "{\"digest\":\"${IMAGE_DIGEST}\",${PACKAGE_LIST}}" \
  #         ${{ vars.DIFFER_URL }}/images/desktop/new
  #         lpkg --lock
